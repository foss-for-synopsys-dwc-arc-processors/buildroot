From db7300bd43925f85fb57f351179c650f5a86a416 Mon Sep 17 00:00:00 2001
From: Sergey Matyukevich <sergey.matyukevich@synopsys.com>
Date: Thu, 23 Dec 2021 10:20:34 +0300
Subject: [PATCH] ARC: Synopsys ARC700 support

Synopsys ARC700 processors are not supported by glibc out of the box.
Meanwhile ARC700 glibc port is very similar to ARCv2 port. Original
glibc patch included both ARC700 and ARCv2:
- https://sourceware.org/pipermail/libc-alpha/2020-March/111855.html

For ARC700 specific changes see patches 5 and 8 from that series:
- https://sourceware.org/pipermail/libc-alpha/2020-March/111851.html
- https://sourceware.org/pipermail/libc-alpha/2020-March/111858.html

However ARC700 changes have been dropped from the later revisions of
ARCv2 glibc patch series. So they have not been added to mainline
glibc together with ARCv2 port.

This patch is based on the original ARC700 glibc work. It adds all
the missing pieces required to make glibc work on ARC700. Besides,
this patch adds specific loader name according to Linux target
triplet for ARC700.

Signed-off-by: Sergey Matyukevich <sergey.matyukevich@synopsys.com>
---
 config.h.in                                |  3 +++
 sysdeps/arc/atomic-machine.h               |  4 +++
 sysdeps/arc/configure                      | 29 ++++++++++++++++++++++
 sysdeps/arc/configure.ac                   | 11 ++++++++
 sysdeps/unix/sysv/linux/arc/ldconfig.h     |  8 +++---
 sysdeps/unix/sysv/linux/arc/shlib-versions |  8 ++++++
 sysdeps/unix/sysv/linux/arc/syscall.S      |  5 ++++
 sysdeps/unix/sysv/linux/arc/sysdep.h       |  8 ++++++
 8 files changed, 73 insertions(+), 3 deletions(-)

diff --git a/config.h.in b/config.h.in
index 82ade1cec4..56783e3cb3 100644
--- a/config.h.in
+++ b/config.h.in
@@ -123,6 +123,9 @@
 /* ARC big endian ABI */
 #undef HAVE_ARC_BE
 
+/* ARC 700 */
+#undef HAVE_ARC700
+
 /* C-SKY ABI version.  */
 #undef CSKYABI
 
diff --git a/sysdeps/arc/atomic-machine.h b/sysdeps/arc/atomic-machine.h
index 4cffc97f20..1056ef1176 100644
--- a/sysdeps/arc/atomic-machine.h
+++ b/sysdeps/arc/atomic-machine.h
@@ -64,6 +64,10 @@ typedef uintmax_t uatomic_max_t;
   __atomic_val_bysize (__arch_compare_and_exchange_val, int,		\
 		       mem, new, old, __ATOMIC_ACQUIRE)
 
+#ifdef __ARC700__
+#define atomic_full_barrier()  ({ asm volatile ("sync":::"memory"); })
+#else
 #define atomic_full_barrier()  ({ asm volatile ("dmb 3":::"memory"); })
+#endif
 
 #endif /* _ARC_BITS_ATOMIC_H */
diff --git a/sysdeps/arc/configure b/sysdeps/arc/configure
index bce7d3c377..d751beade0 100644
--- a/sysdeps/arc/configure
+++ b/sysdeps/arc/configure
@@ -180,3 +180,32 @@ else
   config_vars="$config_vars
 default-abi = arcle"
 fi
+
+# For ARC700 ABI, generate a symbol for shlib-versions
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for arc700" >&5
+$as_echo_n "checking for arc700... " >&6; }
+if ${libc_cv_arc700+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#ifdef __ARC700__
+                      yes
+                     #endif
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "yes" >/dev/null 2>&1; then :
+  libc_cv_arc700=yes
+else
+  libc_cv_arc700=no
+fi
+rm -f conftest*
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $libc_cv_arc700" >&5
+$as_echo "$libc_cv_arc700" >&6; }
+if test $libc_cv_arc700 = yes; then
+  $as_echo "#define HAVE_ARC700 1" >>confdefs.h
+
+fi
diff --git a/sysdeps/arc/configure.ac b/sysdeps/arc/configure.ac
index cb490e47b3..7d04dff255 100644
--- a/sysdeps/arc/configure.ac
+++ b/sysdeps/arc/configure.ac
@@ -24,3 +24,14 @@ if test $libc_cv_arc_be = yes; then
 else
   LIBC_CONFIG_VAR([default-abi], [arcle])
 fi
+
+# For ARC700 ABI, generate a symbol for shlib-versions
+AC_CACHE_CHECK([for arc700],
+  [libc_cv_arc700],
+  [AC_EGREP_CPP(yes,[#ifdef __ARC700__
+                      yes
+                     #endif
+  ], libc_cv_arc700=yes, libc_cv_arc700=no)])
+if test $libc_cv_arc700 = yes; then
+  AC_DEFINE(HAVE_ARC700)
+fi
diff --git a/sysdeps/unix/sysv/linux/arc/ldconfig.h b/sysdeps/unix/sysv/linux/arc/ldconfig.h
index 8c776fca9e..cc0b31de6d 100644
--- a/sysdeps/unix/sysv/linux/arc/ldconfig.h
+++ b/sysdeps/unix/sysv/linux/arc/ldconfig.h
@@ -18,9 +18,11 @@
 
 #include <sysdeps/generic/ldconfig.h>
 
-#define SYSDEP_KNOWN_INTERPRETER_NAMES 		\
-  { "/lib/ld-linux-arc.so.2", FLAG_ELF_LIBC6 },	\
-  { "/lib/ld-linux-arceb.so.2", FLAG_ELF_LIBC6 },
+#define SYSDEP_KNOWN_INTERPRETER_NAMES 			\
+  { "/lib/ld-linux-arc.so.2", FLAG_ELF_LIBC6 },		\
+  { "/lib/ld-linux-arceb.so.2", FLAG_ELF_LIBC6 },	\
+  { "/lib/ld-linux-arc700.so.2", FLAG_ELF_LIBC6 },	\
+  { "/lib/ld-linux-arc700eb.so.2", FLAG_ELF_LIBC6 },
 
 #define SYSDEP_KNOWN_LIBRARY_NAMES 	\
   { "libc.so.6", FLAG_ELF_LIBC6 },	\
diff --git a/sysdeps/unix/sysv/linux/arc/shlib-versions b/sysdeps/unix/sysv/linux/arc/shlib-versions
index 343c0a0450..ab263bf2fb 100644
--- a/sysdeps/unix/sysv/linux/arc/shlib-versions
+++ b/sysdeps/unix/sysv/linux/arc/shlib-versions
@@ -1,7 +1,15 @@
 DEFAULT                 GLIBC_2.32
 
+%ifdef HAVE_ARC700
+%ifdef HAVE_ARC_BE
+ld=ld-linux-arc700eb.so.2
+%else
+ld=ld-linux-arc700.so.2
+%endif
+%else
 %ifdef HAVE_ARC_BE
 ld=ld-linux-arceb.so.2
 %else
 ld=ld-linux-arc.so.2
 %endif
+%endif
diff --git a/sysdeps/unix/sysv/linux/arc/syscall.S b/sysdeps/unix/sysv/linux/arc/syscall.S
index 17b59590b6..452e47c666 100644
--- a/sysdeps/unix/sysv/linux/arc/syscall.S
+++ b/sysdeps/unix/sysv/linux/arc/syscall.S
@@ -24,8 +24,13 @@ ENTRY (syscall)
 	mov_s	r1, r2
 	mov_s	r2, r3
 	mov_s	r3, r4
+#ifdef __ARC700__
+	mov	r4, r5
+	mov	r5, r6
+#else
 	mov_s	r4, r5
 	mov_s	r5, r6
+#endif
 
 	ARC_TRAP_INSN
 	brhi	r0, -4096, L (call_syscall_err)
diff --git a/sysdeps/unix/sysv/linux/arc/sysdep.h b/sysdeps/unix/sysv/linux/arc/sysdep.h
index 6b70ccc687..8010adb06e 100644
--- a/sysdeps/unix/sysv/linux/arc/sysdep.h
+++ b/sysdeps/unix/sysv/linux/arc/sysdep.h
@@ -128,7 +128,11 @@ L (call_syscall_err):			ASM_LINE_SEP	\
     mov    r8, __NR_##syscall_name	ASM_LINE_SEP	\
     ARC_TRAP_INSN			ASM_LINE_SEP
 
+# ifdef __ARC700__
+# define ARC_TRAP_INSN	trap0
+# else
 # define ARC_TRAP_INSN	trap_s 0
+# endif
 
 #else  /* !__ASSEMBLER__ */
 
@@ -139,7 +143,11 @@ extern long int __syscall_error (long int);
 hidden_proto (__syscall_error)
 # endif
 
+# ifdef __ARC700__
+# define ARC_TRAP_INSN	"trap0		\n\t"
+# else
 # define ARC_TRAP_INSN	"trap_s 0	\n\t"
+#endif
 
 # undef INTERNAL_SYSCALL_NCS
 # define INTERNAL_SYSCALL_NCS(number, nr_args, args...)	\
-- 
2.25.1

